from app.models.user import User, UserRole
from fastapi import HTTPException, status
# from app.models.notifications import Announcements
import boto3
import json

iot_client = boto3.client('iot-data', region_name='us-east-2')

topic = f'/notification/global'
event_topic = f"/notification/event"
async def _role_based_checks(current_user: User):
    if current_user.role !=  UserRole.SUPER_ADMIN:
        raise HTTPException(status_code=403, detail="You are not autherize to make any announcement.")
    
async def create_event_announcement(
        event_name,
        current_user,
    ):
    # await _role_based_checks(current_user)
    message = {
            "criticality": f"Normal",
            "description":f"Event has been submitted with name {event_name}",
            "title":f"Event Submission",
            "content_type":"announcement"
            }
    # Publish to IoT topic
    iot_client.publish(
        topic=event_topic,
        qos=1,
        payload=json.dumps(message)
    )
    print(f"Published to {topic}: {message}")

    return

async def create_gloabl_announcement(
        db, 
        create_announcement,
        current_user,
    ):
    await _role_based_checks(current_user)
    message = {
            "criticality": f"{create_announcement.criticality}",
            "description":f"{create_announcement.description}",
            "title":f"{create_announcement.title}",
            "content_type":"announcement"
            }
    # Publish to IoT topic
    iot_client.publish(
        topic=topic,
        qos=1,
        payload=json.dumps(message)
    )
    print(f"Published to {topic}: {message}")

    return
    # announcement_added = Announcements(
    #              title = create_announcement.title,
    #             description = create_announcement.description,
    #             criticality = create_announcement.criticality
    #         )
    # db.add(announcement_added)
    # # Commit the transaction
    # await db.commit()
    # # Refresh to load any new data (like autogenerated id)
    # await db.refresh(announcement_added)
    # else:
    #     raise HTTPException(status_code=404, detail="Provide complete infromation.")
